{"id":7866,"date":"2021-09-03T20:02:47","date_gmt":"2021-09-03T18:02:47","guid":{"rendered":"https:\/\/www.ordisoftware.com\/?p=7866"},"modified":"2021-09-04T15:08:23","modified_gmt":"2021-09-04T13:08:23","slug":"what-is-encapsulation-in-oop","status":"publish","type":"post","link":"https:\/\/www.ordisoftware.com\/blog\/2021\/09\/what-is-encapsulation-in-oop\/","title":{"rendered":"Qu'est-ce que l'encapsulation en POO ?"},"content":{"rendered":"<p style=\"margin-bottom:25px;\"><p><a href=\"https:\/\/en.wikipedia.org\/wiki\/Encapsulation_(computer_programming)\" target=\"_blank\" rel=\"noopener\">Encapsulation<\/a> in <a href=\"https:\/\/en.wikipedia.org\/wiki\/Object-oriented_programming\" target=\"_blank\" rel=\"noopener\">OOP Theory<\/a> is the process to mask some properties and operations in the class that will become inaccessible from the exterior: these are only internal things and behaviours like a digestive system.<\/p>\n<p>It's a <em>compartmentalization<\/em>.<\/p>\n<p><!--more--><\/p>\n<p>Here is a short and reduced description of what <em>access modifiers<\/em> do in C#:<\/p>\n<ul>\n<li><em>Public <\/em>: fields (variables) and properties (variables encapsulation) and methods (functions and procedures) are visible and accessible by the class itslef, by its childs and by any other external classes.<\/li>\n<\/ul>\n<ul>\n<li><em>Private <\/em>: members (fields, properties and methods) are visible and accessible only by the class, not by its childs nor by any external class.<\/li>\n<\/ul>\n<ul>\n<li><em>Protected <\/em>: members are visible and accessible by the class and by its childs, but not by others classes.<\/li>\n<\/ul>\n<ul>\n<li><em>Internal <\/em>: members are visible and accessible by the class and by its childs and by any class that is in the same assembly (.exe and .dll), but not by a class from another assembly.<\/li>\n<\/ul>\n<p>Here is a rule:<\/p>\n<ul>\n<li>If childs classes can modify something it should be set as a protected field, and offer a public property (get) if available for external items.<\/li>\n<\/ul>\n<ul>\n<li>If childs classes are not allowed to modify comething it should be set as a private field and offer :<\/li>\n<\/ul>\n<p style=\"padding-left: 40px;\">- A propected property with only a getter if external items can't access it.<\/p>\n<p style=\"padding-left: 40px;\">- A public property with only a getter if external items can access it.<\/p>\n<p>Don't repeat a member with the same name else it will <em>hide<\/em> the parent and can cause polymorphism problems, unless knowing what is done.<\/p>\n<h4>Links<\/h4>\n<ul>\n<li><a href=\"https:\/\/www.guru99.com\/c-sharp-access-modifiers-constructor.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">C# Access Modifiers<\/a><\/li>\n<li><a href=\"https:\/\/docs.microsoft.com\/dotnet\/csharp\/language-reference\/keywords\/access-modifiers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Access Modifiers (C# Reference)<\/a><\/li>\n<li><a href=\"https:\/\/www.tutorialspoint.com\/Association-Composition-and-Aggregation-in-Chash\" target=\"_blank\" rel=\"noopener\">Association, Composition, Aggregation<\/a><\/li>\n<li><a href=\"https:\/\/www.ordisoftware.com\/blog\/2021\/09\/how-to-improve-your-knowledge-of-csharp\/\">How to improve your knowledge of C#<\/a><\/li>\n<\/ul>\n<p style=\"text-align: right;\"><span style=\"text-decoration: underline; color: #808080;\"><a style=\"color: #808080;\" href=\"https:\/\/stackoverflow.com\/a\/58258056\/12031933\" target=\"_blank\" rel=\"noopener\">CC BY-SA 4.0 Original Post<\/a><\/span><\/p>\n<\/p>","protected":false},"excerpt":{"rendered":"<p style=\"margin-bottom:25px;\">\n<p>Encapsulation in OOP Theory is the process to mask some properties and operations in the class that will become inaccessible from the exterior: these are only internal things and behaviours like a digestive system.<\/p>\n<p>It's a compartmentalization.<\/p>\n<p><span style=\"color:#333\"> &rarr; <a href=\"https:\/\/www.ordisoftware.com\/blog\/2021\/09\/what-is-encapsulation-in-oop\/\">Lire la suite<\/a><\/span><\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[54],"tags":[],"jetpack_featured_media_url":"","_links":{"self":[{"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/posts\/7866"}],"collection":[{"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/comments?post=7866"}],"version-history":[{"count":0,"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/posts\/7866\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/media?parent=7866"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/categories?post=7866"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ordisoftware.com\/wp-json\/wp\/v2\/tags?post=7866"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}